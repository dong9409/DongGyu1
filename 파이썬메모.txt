파이썬

※※숫자형

1. 8진수 만들기 
=> 0o123

2. 제곱을 나타내는 ** 연산자

3. 나누기
/ => 그냥 나누기 한 값
// => 몫을 구함
% => 나머지를 구함

※※문자열

1. 문자열 안에 작은따옴표 있으면 큰따옴표로 둘러싸기
2. 문자열 안에 큰따옴표 있으면 작은따옴표로 둘러싸기
3.  say = 'Python\'s favorite food is perl' 포함하려는 따옴표 앞에 백슬래시 넣기
4. 두줄짜리 문자열 작은따옴표 3개나 큰따옴표 3개 사용하기
5. "%10s" % "hi" => 10칸짜리공백을 만들고 hi를 넣고 가장 오른쪽으로 옮겨라
6. "%-10sjane." % 'hi' => 10칸짜리 공백을 만들고 hi를 넣고 가장 왼쪽으로 옮겨라
    =>'hi        jane.'  "jane"까지 총 14칸
7.  "%10.4f" % 3.42134234 => 10칸짜리 공간에 소숫점 4자리까지 표시하고 가장 오른쪽으로 옮겨라
8. 문자열 조인 ",".join("abcd") ==> 'a,b,c,d' 
9. 왼쪽 공백 지우기(lstrip),  오른쪽 공백 지우기(rstrip),  양쪽 공백 지우기(strip)
10. 문자열 바꾸기 => "ab"를 "cd"로 ==> a.replace("ab", "cd")
11. 문자열 나누기 a.split() => 공백을 기준으로 나눔, a.split(':') :를 기준으로 나눔

※※리스트

1. 생성: a = [1,2,3] , 비어있는 리스트는 a = list() 로 생성
2. 배열처럼 인덱싱 가능 a[0] = 1
3. 리스트안에 리스트 삽입 가능 => 이차원 배열처럼 인덱싱 하면 됨
4. a = [1, 2, 3, 4, 5] >>> a[0:2] = [1,2] 문자열처럼 슬라이싱 한다
5. del 함수를 이용해 요소 삭제 del a[1] 과 같이 삭제
6. remove(x) 함수를 이용해 첫번째로 나오는 x값 삭제
6. append 함수를 이용해 리스트 마지막에 추가 a.append(x) 과 같이 추가 x에 리스트도 올 수 있음
7. insert 함수를 이용해 원하는 위치에 추가 a.insert(위치, 값) 과 같이 추가
7. a.sort() = 정렬,  a.reverse() = 거꾸로, a.index(x) = 리스트에 x 값이 있으면 위치 반환
8. a.pop() = 마지막꺼 꺼내고 없앰, a.count(x) = x의 개수 세기 
9. a.extend([4,5]) == a += [4,5]

※※튜플

1. 생성:
t1 = () 빈 튜플
t2 = (1,) 요소가 하나인 튜플 @콤마 찍어줘야함
t3 = 1,2,3 괄호 없앨 수 있음

2. 값 변경 불가함

※※딕셔너리

1. 생성 :   dic = {'name':'pey', 
                      'phone':'0119993323', 
                      'birth': '1118'} => 테이블 생성과 유사함, 왼쪽이 key 오른쪽이 value
2. 추가 : a[2] = 'b' 라고 하면 2라는 key 가 생성되고 그 값으로 b가 들어감
3. 삭제 del a[key] => 해당 key와 value 쌍이 삭제됨
4. 리스트 인덱싱 처럼 dic[key] 로 value를 얻어올 수 있음
5. 키는 중복되면 안된다. 중복되면 나머지는 무시된다, key로는 변하는 값을 사용할 수 없음(list...)
6. a.keys() : a의 key만을 모아서 돌려줌 (파이썬 3.0부터 리스트로 돌려줌)
   a.values() : a의 value들을 돌려줌
   a.items() : a의 key와 value쌍을 튜플로 묶어서 돌려준다
   a.clear() : a의 모든 쌍들을 지움
   a.get(key) : key에 해당하는 value값 준다. a[key]와 같음
   a.get('foo', 'no') : foo 에 해당하는 value 값을 주고 없을때는 no를 돌려준다
   a.pop(key) : key에 해당하는 value 반환하고 삭제
7. 해당 key가 존재하는지 확인: 'key' in a ==> True or False 값을 리턴함

※※집합

순서가 없고 중복되는 값들을 무시함

1. 생성: s1 = set([1, 2, 3, 4, 5, 6]) 과 같이 생성함
2. 집합 s1과 s2의 교집합: s1 & s2, 	s1.intersection(s2)
   집합 s1과 s2의 합집합: s1 | s2, 	s1.union(s2)
   집합 s1과 s2의 차집합: s1 - s2,	s2.difference(s1)
3. 1개 추가: s1.add(4) => s1집합에 4를 추가함, 순서 상관 없음
   여러개 추가: s1.update([4,5,6]) 여러개 추가함
4. 특정 값 제거: s1.remove(2) 2를 제거함

※※변수

1. a = [1,2,3] , b=a 하면 b와 a는 완전히 같은 객체를 가리킴
   a is b => True
2. 값만 같고 다른 객체를 가리키게 하는법
   b = a[:]  or  from copy import copy 하고 b = copy(a) 하면 된다
3. a = 3, b = 3 이렇게 선언못하고 a, b = (3, 3) 이렇게 튜플로 대입해야함.
4. 두 변수 값 바꾸는 간단한 방법 a, b = b, a 하면 됨, 튜플 활용


