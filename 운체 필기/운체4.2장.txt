18p
쓰레드 라이브러리란 프로그래머에게 쓰레드를 생성, 관리를 할수있는 기능을 API형태로
제공해주는 것이다.
쓰레드 라이브러리는 두가지 형태로 구현된다
첫쨰로 완전히 application 형태로 구현되는것.  즉 user space에서만 동작이 된다.
=> 쓰레드 라이브러리를 호출하면 당연히 시스템 콜이 아니라 그냥 지역함수 호출이 된다.
두번째로 os에서 지원되는 kernal level의 라이브러리 형태로 구현되는 것.
=> 시스템 콜을 의미한다.
쓰레드 라이브러리는 POSIX Pthread, Windows thread, Java thread가 많이 쓰인다.
Pthread는 위의 두가지 형태 쓰레드로 다 구현 가능하다.
windows는 os레벨 커널 레벨로 구현이 가능하다
Java는 JVM이 결국 windows에 깔려 있으므로 windows api를 사용한다,

19p
Pthread는 유저레벨, 커널 레벨로 제공된다.
IEEE 1003.1c에 표준이 정의되어 있다.
코드가 들어있는 것이 아니라 사양에 대한 내용들이 표준에 작성 되어 있다.

20p
Pthread를 사용한 예이다.
이 예시는 0에서 주어진 숫자까지 더해서 결과를 내는 프로그램이다.
sum 변수는 thread간에 공유가 된다.
지금 이 예시에는 pthread create가 하나이므로 하나를 생성 하는 것으로 보인다.
runner는 스레드가 이 함수를 call 해서 쓰레드함수라고 보면된다.
attr_init에서 기본적인 default 속성을 가지고 와서
create에서 쓴다. 생성된 thread의 id 는 tid에 저장된다. 
runner function을 수행하기 위해 파라미터로 argv[1]이 필요하다.
create 한 다음에 이 생성된 쓰레드(tid)가 끝날때까지 wait한다는 뜻으로
pthread_join을 쓴다.

21p
10개의 쓰레드가 다 끝날때 까지 기다리라는 코드이다.

22p
Windows thread
Pthread와 여러면이 유사하다.
windows.h를 인클루드 하는 것으로 보아 커널 레벨에서 스레드를 제공한다는 것을 알수있다
마찬가지로 sum은 공유해야하니까 전역변수로 두고, 방금 전의 runner함수와 같이
summation을 정의한다. Pthread Create 대신 CreateThread라는 것을 쓴다.
wait하고 쓰레드들이 끝나면 closehandle로 close한다.

24p
자바는 쓰레드가 마치 어플리케이션 영역에서 도는것 처럼 보이지만 결국은 JVM이 
쓰레드 object를 생성하고 시작한다. 쓰레드는 자바에서 프로그램 실행의 근본적인 모델이다
print를 하나 만들어도 쓰레드로 동작이 된다. 깔려잇는 os의 특성에 따라 쓰레드모델이
만들어진다.

25p
자바 쓰레드와 관련된 코드이다.