45p
여기서는 우선순위를 가지는 스케쥴링 기법을 살펴보자.
실시간 os는 특정 프로세스가 cpu를 필요로할때 바로 응답해 주어야한다.
실시간이라는 것을 두가지 관점으로 본것이 soft real time, hard real time이다.
hard real time은 deadline을 만족시켜준다. soft real time은 선점의 기능을 가지며
우선순위를 가지는 스케쥴링 기법으로 만들어 지는 것을 말한다.
이 우선순위를 가지는 스케쥴링 기법을 보기전에 몇가지 프로세스의 속성을 살펴보자
그림에 색칠되어 있는것이 task이고, 실행시간이 t이다. 이 태스크가 주기적으로 반복
되는데 그 주기를 P라고 하고있다. 1/p를 이 주기적인 task의 발생률 rate라고 하자.
따로 표시되어 있는 d는 deadline을 말한다. 만약 특정 deadline이 정해지지 않으면
P를 deadline으로 보는경우도 많다.

46p
task의 주기에 따라서 스케쥴링의 우선순위를 결정하는 Rate Monotonic 스케쥴링을
살펴보자. task의 주기가 짧으면 rate는 높아진다. Monotonic은 단조함수로써 상승하면
계속 상승 하강하면 계속 하강하는 특성을 가진다. 주기가 짧은 스케쥴링의 우선순위를
높이겠다라는 것을 이름을 보고 알수있다. 주기가 짧으면 높은 우선순위, 길면 낮은
우선순위이다. P1 P2를 예로들어보면 P1 우선순위가 높다.

47p
100이라는 시점에 P1은 두번 실행이 되고 P2는 한번 실행이 되었다.
둘다 데드라인(여기서는 period)을 만족 시켰다.
100에서 동일하게 P1 P2가 대기하는데 우선순위가 높은 P1이 먼저 실행이된다.
동일하게 반복된다.
50시점을 보면 P2가 실행이 되고 있어도 밀어내고 P1이 선점하다.
이렇게 정상적으로 데드라인을 만족시킨다.

48p
Rate monotonic으로 안되면 다른 static priority로도 스케쥴링 안된다.
예시를 보면 P2가 자신의 데드라인을 만족 시키지 못하였다.

49p
Earliest Deadline First 기법은 각 프로세스의 deadline이 어느것이 더 임박했냐에
따라서 스케쥴링이 되는 기법이다. 상황에 따라 스케쥴링이 동적으로 바뀌어서 
dynamic한 스케쥴링 기법이다.
time 50시점에서 P1이 도착을 했음에도 P2가 실행되고 있다. 이떄 P1의 데드라인은
100 P2는 80이기 때문에 P2의 우선순위가 더 높기 때문이다.

50p
Proportional share 스케쥴링은
일정 비율의 몫을 가지고 스케쥴링을 받는다 라는 뜻이다.
시스템에 있는 모든 프로세스가 T개의 몫을 가지고 있다고 하자.
이때 하나의 app이 N개의 share를 가지고 있다고 하자.
예시를 보자 각각의 테스트는 각각의 시간(몫)을 할당받았다.
새로운 태스크가 20이라는 share를 할당 받으려면 거부된다. 15밖에 안남았기 떄문임.
그래서 이것은 승인 제어 정책과 같이 사용된다.